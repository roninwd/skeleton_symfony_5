version: '3.7'
networks:
    skeleton:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.229.0/28

volumes:
    postgres:
    redis:

services:
    db:
        container_name: skeleton_db
        image: postgres:12.3
        volumes:
            - postgres:/var/lib/postgresql/data
            - ./docker/postgres/:/docker-entrypoint-initdb.d
        restart: on-failure
        ports:
            - ${DB_PORTS}
        environment:
            POSTGRES_MULTIPLE_DATABASES: "skeleton_test:skeleton_test"
            POSTGRES_DB: skeleton
            POSTGRES_USER: skeleton
            POSTGRES_PASSWORD: skeleton
        networks:
            - skeleton
    nginx:
        image: nginx:1.19.0
        restart: on-failure
        volumes:
            - './site/:/usr/src/app'
            - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
        ports:
            - ${NGINX_PORTS}
        depends_on:
            - php
        networks:
            - skeleton
        container_name: skeleton_nginx
    php:
        hostname: "socket-php"
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        restart: on-failure
        networks:
            - skeleton
        container_name: "skeleton_backend"
        volumes:
            - ./site/:/usr/src/app
            - ./docs/swagger:/usr/src/docs
            - ./docker/php/supervisor/:/usr/src/supervisor
        environment:
            PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
            DOMAIN: ${DOMAIN}
    redis:
        container_name: skeleton_redis
        image: redis:5.0.7
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - redis:/data
        ports:
            - ${REDIS_PORTS}
        hostname: ${REDIS_HOST}
        networks:
            - skeleton
    rabbitmq:
        networks:
            - skeleton
        container_name: skeleton_rabbitmq
        restart: on-failure
        image: rafakato/rabbitmq-delayed-message-exchange

    redoc:
        container_name: "skeleton_redoc"
        image: redocly/redoc
        restart: on-failure
        ports:
            - ${REDOC_PORTS}
        volumes:
            - ./docs/swagger/:/usr/share/nginx/html/doc/
        environment:
            SPEC_URL: ./doc/swagger.yaml